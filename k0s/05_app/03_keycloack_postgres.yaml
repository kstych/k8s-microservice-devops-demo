apiVersion: v1
kind: PersistentVolume
metadata:
  name: orp-keycloak-volumne
  labels:
    name: orp-keycloak-volumne # name can be anything
spec:
  storageClassName: orpstorage # same storage class as pvc
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: 192.168.1.2 # ip addres of nfs server
    path: "/mnt/k8s/nfsroot/orp" # path to directory, make sure directory is available
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-postgres-data
  namespace: orp
spec:
  storageClassName: orpstorage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgres-service
  namespace: orp
spec:
  selector:
    app: postgres-keycloak
  ports:
  - name: http-gitea
    port: 5432
    targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-keycloak
  namespace: orp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres-keycloak
    spec:
      containers:
      - name: postgres
        env:
        - name: POSTGRES_DB
          value: keycloak
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_USER
          value: keycloak
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data-vol
          subPath: postgreskeycloak
      restartPolicy: Always
      volumes:
      - name: postgres-data-vol
        persistentVolumeClaim:
          claimName: keycloak-postgres-data
